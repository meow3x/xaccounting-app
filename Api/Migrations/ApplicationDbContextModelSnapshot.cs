// <auto-generated />
using Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Api.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("AccountTypeId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Credit")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Debit")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("YearEndBudget")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.HasIndex("AccountTypeId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Api.Entities.AccountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AccountTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "Cash"
                        },
                        new
                        {
                            Id = 2,
                            Label = "Bank"
                        },
                        new
                        {
                            Id = 3,
                            Label = "Trade Receivable"
                        },
                        new
                        {
                            Id = 4,
                            Label = "Non-Trade Receivable"
                        },
                        new
                        {
                            Id = 5,
                            Label = "Material"
                        },
                        new
                        {
                            Id = 6,
                            Label = "Inventory"
                        },
                        new
                        {
                            Id = 7,
                            Label = "Properties"
                        },
                        new
                        {
                            Id = 8,
                            Label = "Accumulated Depreciation"
                        },
                        new
                        {
                            Id = 9,
                            Label = "Other Current Assets"
                        },
                        new
                        {
                            Id = 10,
                            Label = "Other Non-Current Assets"
                        },
                        new
                        {
                            Id = 11,
                            Label = "Payable"
                        },
                        new
                        {
                            Id = 12,
                            Label = "Other Current Liabilities"
                        },
                        new
                        {
                            Id = 13,
                            Label = "Other Non-Current Liabilities"
                        },
                        new
                        {
                            Id = 14,
                            Label = "Capital"
                        },
                        new
                        {
                            Id = 15,
                            Label = "Sales"
                        },
                        new
                        {
                            Id = 16,
                            Label = "Sales Discount"
                        },
                        new
                        {
                            Id = 17,
                            Label = "Expenses"
                        });
                });

            modelBuilder.Entity("Api.Entities.Account", b =>
                {
                    b.HasOne("Api.Entities.AccountType", "AccountType")
                        .WithMany()
                        .HasForeignKey("AccountTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountType");
                });
#pragma warning restore 612, 618
        }
    }
}
